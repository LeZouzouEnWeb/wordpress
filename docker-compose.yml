version: "3.8"
# Defines which compose version to use
services:
  # Services line define which Docker images to run. In this case, it will be MySQL server and WordPress image.
  mariadb:
    image: mariadb:latest
    volumes:
      - ${PWD}/db_data:/var/lib/mysql
    ports:
      - "3306:3306"
    restart: always
    env_file:
      - ${PWD}/.env/mariadb.env
      # Previous four lines define the main variables needed for the MySQL container to work: database, database username, database user password, and the MySQL root password.
    networks:
      - wpsite

  # phpmyadmin
  phpmyadmin:
    depends_on:
      - mariadb
    image: phpmyadmin/phpmyadmin
    restart: always
    ports:
      - "8080:80"
    env_file:
      - ${PWD}/.env/phpadmin.env
    networks:
      - wpsite

  wordpress:
    depends_on:
      - mariadb
    image: wordpress:latest
    restart: always
    # Restart line controls the restart mode, meaning if the container stops running for any reason, it will restart the process immediately.
    ports:
      - "8000:80"
      # The previous line defines the port that the WordPress container will use. After successful installation, the full path will look like this: http://localhost:8000
    env_file:
      - ${PWD}/.env/mariadb.env
      - ${PWD}/.env/wordpress.env

    # Similar to MySQL image variables, the last four lines define the main variables needed for the WordPress container to work properly with the MySQL container.
    volumes: ["${PWD}/wordpress/:/var/www/html"]
    networks:
      - wpsite

networks:
  wpsite:
volumes:
  db_data:
